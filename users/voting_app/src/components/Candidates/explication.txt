// Dans votre composant Home.jsx, remplacez la section du modal de vote par:

// Import du composant MonetbilPayment
import MonetbilPayment from './MonetbilPayment';

// Dans le composant Home, ajoutez un état pour le modal de paiement
const [showPaymentModal, setShowPaymentModal] = useState(false);

// Modification de la fonction submitVote pour utiliser le composant de paiement
const submitVote = (e) => {
  e.preventDefault();
  
  // Fermer le modal de vote et ouvrir le modal de paiement
  setShowVoteModal(false);
  setShowPaymentModal(true);
};

// Fonction pour gérer le succès du paiement
const handlePaymentSuccess = (transaction) => {
  // Mettre à jour les votes localement
  const updatedCandidates = candidates.map(c => {
    if (c.id === selectedCandidate.id) {
      return {...c, votes: c.votes + parseInt(voteAmount)};
    }
    return c;
  });
  
  // Mise à jour de l'état pour indiquer que le vote a réussi
  setVoteSuccess(true);
  
  // Fermer le modal de paiement après un délai
  setTimeout(() => {
    setShowPaymentModal(false);
  }, 2000);
};

// Ajoutez le composant MonetbilPayment dans le rendu, après le modal de vote

{/* Vote Modal */}
{/* Votre code existant pour le modal de vote */}

{/* Monetbil Payment Modal */}
{showPaymentModal && selectedCandidate && (
  <MonetbilPayment
    selectedCandidate={selectedCandidate}
    voteAmount={voteAmount}
    voterName={voterName}
    voterEmail={voterPhone + '@hitbamas.org'} // Modification selon vos besoins
    onPaymentSuccess={handlePaymentSuccess}
    onPaymentFailure={() => setShowPaymentModal(false)}
    onClose={() => setShowPaymentModal(false)}
  />
)}